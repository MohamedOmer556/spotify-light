{"version":3,"sources":["components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","components/Nav.js","utils.js","App.js","reportWebVitals.js","index.js"],"names":["Player","currentSong","setCurrentSong","isPlaying","setIsPlaying","audioRef","setSongInfo","songInfo","songs","setSongs","activeLibrary","nextPrev","newSong","map","song","id","active","getTime","time","Math","floor","slice","skipTrack","direction","currentIndex","findIndex","length","playPromise","current","play","undefined","then","audio","trackAnimation","transform","animationPrecetage","className","currentTime","style","background","color","onChange","e","target","value","min","max","duration","type","onClick","icon","faAngleLeft","size","pause","faPause","faPlay","faAngleRight","Song","src","cover","alt","name","artist","LibrarySong","Library","libraryStatus","Nav","setLibraryStatus","faMusic","chillHop","uuidv4","App","useRef","useState","data","timeUpdate","roundedCurrent","round","roundedDuration","songEnd","a","onLoadedMetadata","onTimeUpdate","ref","onEnded","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75a27825.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlay,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faPause,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Player({\r\n  currentSong,\r\n  setCurrentSong,\r\n  isPlaying,\r\n  setIsPlaying,\r\n  audioRef,\r\n  setSongInfo,\r\n  songInfo,\r\n  songs,\r\n  setSongs,\r\n}) {\r\n  //userEffect\r\n  const activeLibrary = (nextPrev) => {\r\n    //add active state\r\n    const newSong = songs.map((song) => {\r\n      if (song.id === nextPrev.id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSong);\r\n  };\r\n\r\n  //play and pause\r\n  const playSong = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  };\r\n\r\n  //to make the time 0:00 , 2.17\r\n  const getTime = (time) => {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  };\r\n\r\n  //change song input\r\n  const dragInput = (e) => {\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\r\n  };\r\n\r\n  //skip back and forward\r\n  const skipTrack = (direction) => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    if (direction === \"skip-forward\") {\r\n      setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n      activeLibrary(songs[(currentIndex + 1) % songs.length]);\r\n    }\r\n    if (direction === \"skip-back\") {\r\n      if ((currentIndex - 1) % songs.length === -1) {\r\n        setCurrentSong(songs[songs.length - 1]);\r\n        activeLibrary(songs[songs.length - 1]);\r\n        return;\r\n      }\r\n      setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n      activeLibrary(songs[(currentIndex - 1) % songs.length]);\r\n    }\r\n    //check if it's loaded\r\n    if (isPlaying) {\r\n      const playPromise = audioRef.current.play();\r\n      if (playPromise !== undefined) {\r\n        playPromise.then((audio) => {\r\n          audioRef.current.play();\r\n        });\r\n      }\r\n    }\r\n  };\r\n  //animation\r\n  const trackAnimation = {\r\n    transform: `translateX(${songInfo.animationPrecetage}%)`,\r\n  };\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"time-control\">\r\n        <p>{getTime(songInfo.currentTime)}</p>\r\n        <div\r\n          style={{\r\n            background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`,\r\n          }}\r\n          className=\"track\"\r\n        >\r\n          <input\r\n            onChange={dragInput}\r\n            min={0}\r\n            max={songInfo.duration}\r\n            value={songInfo.currentTime}\r\n            type=\"range\"\r\n          />\r\n          <div style={trackAnimation} className=\"animate-track\"></div>\r\n        </div>\r\n        <p>{songInfo.duration ? getTime(songInfo.duration) : \"0.00\"}</p>\r\n      </div>\r\n      <div className=\"play-control\">\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrack(\"skip-back\")}\r\n          className=\"skip-back\"\r\n          icon={faAngleLeft}\r\n          size=\"2x\"\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={playSong}\r\n          className=\"play\"\r\n          icon={isPlaying ? faPause : faPlay}\r\n          size=\"2x\"\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrack(\"skip-forward\")}\r\n          className=\"skip-forward\"\r\n          icon={faAngleRight}\r\n          size=\"2x\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Player;\r\n","import React from \"react\";\r\n\r\nfunction Song({ currentSong }) {\r\n  return (\r\n    <div className=\"song-container\">\r\n      <img src={currentSong.cover} alt={currentSong.cover} />\r\n      <h1>{currentSong.name}</h1>\r\n      <h2>{currentSong.artist}</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Song;\r\n","import React from \"react\";\r\n\r\nfunction LibrarySong({\r\n  song,\r\n  songs,\r\n  setCurrentSong,\r\n  audioRef,\r\n  isPlaying,\r\n  setSongs,\r\n  id,\r\n}) {\r\n  const songSelect = () => {\r\n    setCurrentSong(song);\r\n\r\n    //add active state\r\n    const newSong = songs.map((song) => {\r\n      if (song.id === id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSong);\r\n    //check if it's loaded\r\n    if (isPlaying) {\r\n      const playPromise = audioRef.current.play();\r\n      if (playPromise !== undefined) {\r\n        playPromise.then((audio) => {\r\n          audioRef.current.play();\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onClick={songSelect}\r\n      className={`library-song ${song.active ? \"selected\" : \"\"}`}\r\n    >\r\n      <img src={song.cover} alt={song.cover} />\r\n      <div className=\"title\">\r\n        <h3>{song.name}</h3>\r\n        <h4>{song.artist}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LibrarySong;\r\n","import React from \"react\";\r\nimport LibrarySong from \"./LibrarySong\";\r\n\r\nfunction Library({\r\n  songs,\r\n  setCurrentSong,\r\n  audioRef,\r\n  isPlaying,\r\n  setSongs,\r\n  libraryStatus,\r\n}) {\r\n  return (\r\n    <div className={`library ${libraryStatus ? \"active-library\" : \"\"} `}>\r\n      <h2>Library</h2>\r\n      <div className=\"library-songs\">\r\n        {songs.map((song) => (\r\n          <LibrarySong\r\n            song={song}\r\n            setCurrentSong={setCurrentSong}\r\n            songs={songs}\r\n            key={song.id}\r\n            id={song.id}\r\n            audioRef={audioRef}\r\n            isPlaying={isPlaying}\r\n            setSongs={setSongs}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Library;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Nav({ libraryStatus, setLibraryStatus }) {\r\n  return (\r\n    <nav>\r\n      <h1>Waves</h1>\r\n      <button onClick={() => setLibraryStatus(!libraryStatus)}>\r\n        Library\r\n        <FontAwesomeIcon icon={faMusic} />\r\n      </button>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction chillHop() {\r\n  return [\r\n    {\r\n      name: \"Flashback\",\r\n      artist: \" Blue Wednesday, Shopan \",\r\n      color: [\"#6E4C71\", \"#141E3D\"],\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/12/33a2a875828118a3ff260638a88362936104879a-1024x1024.jpg\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=11225\",\r\n      id: uuidv4(),\r\n      active: true,\r\n    },\r\n    {\r\n      name: \"Murmuration\",\r\n      artist: \" Blue Wednesday, Shopan \",\r\n      color: [\"#966B50\", \"#0395A0\"],\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/bb0db71fd74f15627e9912ad2278c13cee72ac2d-1024x1024.jpg\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=7814\",\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Today Feels Like Everyday\",\r\n      artist: \"Mama Aiuto\",\r\n      color: [\"#452511\", \"#563B2E\"],\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2021/01/6b1bb8736ee3e972747bc11f312e31cf7f5823e4-1024x1024.jpg\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=12128\",\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Melancholy\",\r\n      artist: \"Makzo\",\r\n      color: [\"#413854\", \"#124287\"],\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/11/f78c39b4bb6313ddd0354bef896c591bfb490ff8-1024x1024.jpg\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=11778\",\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Lilo\",\r\n      artist: \" Middle School, The Field Tapes \",\r\n      color: [\"#111214\", \"#AAB18A\"],\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/11/8a0c857ddad531279d0757f5362380a6837b1b69-1024x1024.jpg\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=11244\",\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Tuesday\",\r\n      artist: \" Comodo \",\r\n      color: [\"#902535\", \"#2B264C\"],\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/10/0e5bb63f838ff92eeac142aae944e9f678df13c9-1024x1024.jpg\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10323\",\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n  ];\r\n}\r\n\r\nexport default chillHop;\r\n","import React, { useState, useRef } from \"react\";\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\nimport \"./styles/app.scss\";\nimport data from \"./utils\";\n\nfunction App() {\n  //ref\n  const audioRef = useRef(null);\n  //state\n  const [libraryStatus, setLibraryStatus] = useState(false);\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPrecetage: 0,\n  });\n\n  //to update the time with eavry song\n  const timeUpdate = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    //precentage\n    const roundedCurrent = Math.round(current);\n    const roundedDuration = Math.round(duration);\n    const animationPrecetage = Math.round(\n      (roundedCurrent / roundedDuration) * 100\n    );\n\n    setSongInfo({\n      ...songInfo,\n      currentTime: current,\n      duration,\n      animationPrecetage,\n    });\n  };\n  //auto skip\n  const songEnd = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    if (isPlaying) audioRef.current.play();\n  };\n  return (\n    <div className={`app ${libraryStatus ? \"library-active\" : \"\"}`}>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song currentSong={currentSong} />\n      <Player\n        currentSong={currentSong}\n        setCurrentSong={setCurrentSong}\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        audioRef={audioRef}\n        songInfo={songInfo}\n        setSongInfo={setSongInfo}\n        songs={songs}\n        setSongs={setSongs}\n      />\n      <Library\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        audioRef={audioRef}\n        isPlaying={isPlaying}\n        setSongs={setSongs}\n        libraryStatus={libraryStatus}\n      />\n      <audio\n        onLoadedMetadata={timeUpdate}\n        onTimeUpdate={timeUpdate}\n        ref={audioRef}\n        src={currentSong.audio}\n        onEnded={songEnd}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}